{
  "blocks": [
    {
      "type": "code",
      "output": "import { render, sig, eff_on, mut, mem, html } from \"/lib/solid/monke.js\"\n\n\nconst M = mut({});\ndocument.M = M;\nconst defer = (fn, t = 200) => setTimeout(fn, t)\nconst current_width = 1000\nlet x = sig(0) \nlet y = sig(0)\nlet w = sig(10)\nlet h = sig(0)\nlet multiplier = 1\n\ndocument.body.addEventListener(\"mousemove\", (e) => {\n  console.log(e.clientX, e.clientY)\n  if (e.clientX) x.set(e.clientX)\n  if (e.clientY) y.set(e.clientY)\n})\n\n\ndocument.onkeydown = (e) => {\n  if (e.key == \"L\") w.set(w() + 10) \n  if (e.key == \"H\") w.set(w() - 10) \n  if (e.key == \"J\") h.set(h() + 10) \n  if (e.key == \"K\") h.set(h() - 10) \n  if (e.key == \"Enter\") {\n    crop(...([x(), y(), w(), h()].map(f => f * multiplier)))\n  }\n}\n\n\nlet style = mem(() => `\n  top: ${y()}px;\n  left: ${x()}px;\n  width: ${w()}px;\n  height: ${h()}px;\n  border: 1px red solid;\n  position: fixed;\n`)\n\nconst src = \"/fs/media/beauty_c.mp4\"\n\nlet loaded = function(e) {\n  let vw = this.videoWidth\n  let vh = this.videoHeight\n\n  console.log(\"width\", vw)\n  console.log(\"height\", vh)\n\n  let div = vw/vh\n  \n  let reduced_w = vw/current_width\n  let reduced_h = vh/(current_width/div)\n  \n  multiplier = reduced_w\n\n  console.log(\"reduced is equal:\", reduced_h == reduced_w)\n  console.log(\"reduced is:\", reduced_h)\n  \n  console.log(\"actual size\", current_width * reduced_w)\n  console.log(\"actual size\", (current_width/div) * reduced_h)\n}\n\nfunction Root() {\n  return html`\n    style ---\n\n    *{\n      padding: 0px;\n      margin: 0px;\n    }\n\n    ---\n    div\n      .cropper [style=${style}]\n      video [ \n        src=${src}\n        onloadedmetadata=${loaded}  \n        width=${current_width+\"px\"} \n        controls=true ]\n  `\n}\n\nfunction crop(x, y, w, h){\n  let rename = src.replace(\".mp4\", \"-cropped.mp4\")\n  \n  fetch(\"/ffmpeg/\", {\n    method: \"POST\",\n    headers: {\"Content-Type\": \"application/json\"},\n    body: JSON.stringify({\n      action: \"crop\",\n      input: src,\n      output: rename,\n      args: { x, y, h, w }\n    })\n  }).then((res) => console.log(res))\n}\n\n\nrender(Root, document.body)\n\n\n\n\n\n",
      "active": true,
      "focus": true,
      "start": 0,
      "focused": false,
      "cursor": 392
    },
    {
      "type": "save-component",
      "id": "n3itp5",
      "start": 2035,
      "path": "test/cropper.json",
      "output": "",
      "active": false,
      "focus": false
    },
    {
      "type": "editor_sizer",
      "id": "3s95sh",
      "start": 2035,
      "size": "41",
      "output": "",
      "active": false
    }
  ],
  "output": ""
}