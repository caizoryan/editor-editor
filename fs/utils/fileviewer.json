{
  "blocks": [
    {
      "type": "code",
      "id": "tma0w",
      "start": 0,
      "focused": false,
      "output": "import {mut} from \"/lib/solid/monke.js\"\n\nconst defer = (fn, t = 400) => setTimeout(fn, t)\nconst M = mut({})\ndocument.M = M\n\n\ndefer(function() {\n  if (M) {\n    let E = M.EDITOR\n    console.log(E)\n    // save this file\n    if (E) E.state.save(\"utils/fileviewer.json\")\n  }\n})\n\nfunction show_dir(path, dir){\n  let path_split = path.split(\"/\")\n  let path_slice = path_split.slice(0, path_split.length - 2)\n  let back_path = path_slice.join(\"/\")\n  let title = path == \"\" ? \"\" : \"../\" + back_path\n  let back = p(title, () => check_dir(back_path))\n  let files = dir.files.map((f) => p(f, () => check_dir(path+\"/\"+f+\"/\")))\n  document.body.innerHTML = \"\"\n  document.body.appendChild(back)\n  files.forEach((f) => document.body.appendChild(f))\n}\n\nfunction p(text, onclick){\n  let elem = document.createElement(\"p\")\n  elem.innerText = text\n  elem.onclick = onclick\n\n  return elem\n}\n\nfunction check_dir(path = \"\", root = \"/fs/\"){\n  fetch(root+path)\n    .then((res) => {\n      try{ return res.json() }\n      catch { return null }\n    })\n    .then((res) => {\n      if (res.type == \"dir\") show_dir(path, res) \n    })\n}\n\ncheck_dir(\"\")\n\n\n",
      "cursor": 124,
      "active": true,
      "focus": true
    }
  ],
  "output": ""
}